name: 🏗 Ubuntu

on:
  workflow_call:
    secrets:
      SUPER_SECRET:
        description: 'A token passed from the caller workflow'
        required: true
      # vari:
      #   description: 'A token passed from the caller workflow'
      #   required: true
jobs:
  build:
    name: Build ${{ matrix.version}}-${{ matrix.compiler}}-${{ matrix.build_type}}
    if: always()
    strategy:
      matrix:
        version: [20.04, 22.04]
        # compiler: ['gcc', 'clang']
        # build_type: ['release', 'debug']

    runs-on: ubuntu-${{ matrix.version}}
    steps:
      - name: just fail
        if: ${{ matrix.compiler }} == clang
        run: echo ${{ matrix.compiler }}

      - uses: actions/checkout@v3
        # name: ${{ github.workflow }}
      - name: Use  FRIGGIN secret
        run: |
          echo "The secret: ${{ secrets.SUPER_SECRET }}" >> file.txt
          if [ ${{ secrets.SUPER_SECRET }} = "cool" ]; then
            echo "we're good"
          fi
          echo "I guess I can't even type the secret... cool"
          cat file.txt

      - uses: legleux/failure/.github/actions/secret@main
        with:
          var: ${{ secrets.SUPER_SECRET }}
          super_secret: "${{ secrets.SUPER_SECRET }}"

        env:
          GPG_KEY_B64: ${{ secrets.SUPER_SECRET }}
          GPG_KEY_PASS_B64: ${{ secrets.SUPER_SECRET }}
          SUCK: ${{ secrets.SUPER_SECRET }}
          super_env_secret: ${{ secrets.SECRET_ENV }}

      - uses: legleux/failure/.github/actions/ubuntu/build@main

  test:
    name: Test ${{ matrix.version}}-${{ matrix.compiler}}-${{ matrix.build_type}}
    needs: build
    # name: ${{ matrix.version}}-${{ matrix.compiler}}-${{ matrix.build_type}}
    strategy:
      matrix:
        version: [20.04, 22.04]
        # compiler: ['gcc', 'clang']
        # build_type: ['release', 'debug']

    runs-on: ubuntu-${{ matrix.version}}
    steps:
      - uses: actions/checkout@v3
        name: ${{ github.workflow }}

      - uses: legleux/failure/.github/actions/ubuntu/test@main

      - uses: actions/upload-artifact@master
        with:
          name: executable
          path: ${{github.workspace}}
